<project name="concordion" default="build" basedir=".">

    <property name="version" value="1.4.2"/>
    <property name="productName" value="concordion"/>
    <property name="ProductName" value="Concordion"/>

    <property name="dir.build" value="${basedir}/build"/>
    <property name="dir.classes" value="${dir.build}/classes"/>
    <property name="dir.test.output" value="${dir.build}/test-output"/>
    <property name="dir.concordion.output" value="${dir.test.output}/concordion"/>
    <property name="dir.dist" value="${basedir}/dist"/>
    <property name="dir.mvn.target" value="${basedir}/target"/>
    <property environment="env"/>
    <property name="java5.bootclasspath" value="${env.JAVA5_BOOTCLASSPATH}"/>

    <fail unless="env.JAVA5_BOOTCLASSPATH">ERROR:
The environment variable JAVA5_BOOTCLASSPATH must be set to a Java 5 rt.jar.  
While the test classes require Java 6 or later, this variable must be set to 
ensure compatibility with Java 5 libraries for the main classes.</fail>


    <path id="compile.classpath">
        <fileset dir="lib" includes="*.jar" excludes="*-src.jar"/>
    </path>

    <target name="build"
        description="Builds everything from scratch"
        depends="compile, run.tests, build.jar, build.srczip"
    />

    <target name="clean">
        <delete dir="${dir.build}" />
        <delete dir="${dir.test.output}"/>
        <delete dir="${dir.concordion.output}"/>
        <delete dir="${dir.classes}"/>
        <delete dir="${dir.dist}"/>
        <delete dir="${dir.mvn.target}"/>
    </target>

    <target name="compile.main">
        <mkdir dir="${dir.classes}"/>

        <javac classpathref="compile.classpath"
               destdir="${dir.classes}"
               srcdir="src/main/java"
               debug="yes"
               failonerror="yes"
               source="1.5"
               target="1.5"
               includeantruntime="no"
               bootclasspath="${java5.bootclasspath}"
        />

        <copy todir="${dir.classes}">
            <fileset dir="src/main/resources" />
        </copy>
    </target>

    <target name="compile.test">
        <mkdir dir="${dir.classes}"/>

        <javac classpathref="compile.classpath"
               destdir="${dir.classes}"
               srcdir="src/test/java"
               debug="yes"
               failonerror="yes"
               includeantruntime="no"
        />

        <copy todir="${dir.classes}">
            <fileset dir="src/test/resources" />
        </copy>
    </target>

    <target name="compile" depends="compile.main, compile.test"/>

    <target name="run.tests" depends="compile">
        <mkdir dir="${dir.test.output}"/>
        <mkdir dir="${dir.concordion.output}"/>

        <junit fork="yes" forkmode="once" printsummary="yes" haltonfailure="yes" showoutput="yes">
            <jvmarg value="-Dconcordion.output.dir=${dir.concordion.output}"/>

            <classpath>
                <path refid="compile.classpath"/>
                <pathelement location="${dir.classes}"/>
            </classpath>

            <formatter type="plain" />

            <batchtest todir="${dir.test.output}">
                <fileset dir="src/test/java">
                    <include name="**/*Test.java"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="build.jar" depends="compile">
        <mkdir dir="${dir.dist}"/>

        <jar destfile="${dir.dist}/${productName}-${version}.jar"
                basedir="${dir.classes}"
                compress="false">
            <exclude name="spec/**"/>
            <exclude name="test/**"/>
        </jar>
    </target>

    <target name="build.srczip">
        <mkdir dir="${dir.dist}"/>

        <zip destfile="${dir.dist}/${productName}-${version}-src.zip"
                basedir="src"
                compress="false">
        </zip>
    </target>

    <target name="dist" depends="clean,build">
        <zip destfile="${dir.dist}/${productName}-${version}.zip" compress="true">
            <zipfileset prefix="${productName}-${version}" dir=".">
                <exclude name="dist/*-src.zip"/>
                <exclude name="build/**"/>
                <exclude name="bin/**"/>
            </zipfileset>
        </zip>
    </target>

</project>
