#!/usr/local/bin/perl

# The purpose of this script is to run a wordcount job
# Example:
# $ CLUSTER=<cluster name> run_wordcount_job 
# $ CLUSTER=<cluster name> run_wordcount_job -user hadoopqa
# $ CLUSTER=<cluster name> run_wordcount_job -input <input file>
# $ CLUSTER=<cluster name> run_wordcount_job -input <input file> -input_type hdfs
# $ CLUSTER=<cluster name> run_wordcount_job -args -Dmapreduce.map.speculative=true

use strict;
use warnings;

use FindBin qw($Bin $Script);
use lib "$FindBin::Bin/../lib";
use base qw(Hadoop::Test);
use Getopt::Long;
use Test::More;

my %options = ();
my $verbose = 0;
my $input_type        = 'local';
my $input;
my $user=getpwuid($>);
my @args;
my $result =
    GetOptions ( \%options,
                 "input=s"        => \$input,
                 "input_type=s"   => \$input_type,
                 "user=s"         => \$user,
                 "verbose"        => \$verbose,
                 "args=s{,}"      => \@args,
                 "help|h|?");

usage(1) if (!$result) or (@ARGV);
usage(0) if $options{help};

sub usage
{
    my($exit_code) = @_;
    diag << "EOF";
Usage: $Script
   [-input       <input text file>   ]: Input text file. Default input will be auto-generated by randomtextwriter
   [-input_type  <input type>        ]: {'local', 'hdfs'} Default is local
   [-args   <runtime args>           ]: one or more runtime args to be passed through
   [-user        <user uid>          ]: default user is the uid
   [-verbose                         ]: verbosity
   [-help|h|?                        ]: Display usage

Example:
CLUSTER=<cluster name> run_wordcount_job 
CLUSTER=<cluster name> run_wordcount_job -input <input file>
CLUSTER=<cluster name> run_wordcount_job -input <input file> -input_type hdfs
CLUSTER=<cluster name> run_wordcount_job -user hadoopqa
CLUSTER=<cluster name> run_wordcount_job -args -Dmapreduce.map.speculative=true

EOF
    exit $exit_code;
}

my $self = __PACKAGE__->new;
my $Config = $self->config;

note("--> Run a wordcount job in the foreground: ");

# Generate text input
if ($input) {
    if ($input_type eq 'local') {
        # copy it to hdfs
        $self->run_fs(['-copyFromLocal', $input, $input]);
    }
}
else {
    my $rtw_output = $self->run_randomtextwriter_job(undef, $verbose);
    $input = $rtw_output;
}
$self->run_fs(['-ls', $input]);

# wordcount job
my $job_hash = { 'input_dir' => $input };
$job_hash->{user} = $user if $user;
$job_hash->{args} = \@args if (@args);
my $wc_output = $self->run_wordcount_job($job_hash, $verbose);
$self->run_fs(['-ls', $wc_output]);


