<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>hadooptest</groupId>
		<artifactId>hadooptest-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>./parent-pom.xml</relativePath>
	</parent>

	<artifactId>hadooptest-ci</artifactId>

	<properties>
		<thread.count>8</thread.count>
	</properties>

	<profiles>

		<!-- PROFILES FOR CODE COVERAGE -->
		<!-- PROFILE FOR JACOCO FOR SYSTEM TEST -->
		<!-- PROFILE FOR CLOVER FOR UNIT TEST -->
		<!-- PROFILE FOR HADOOP -->

		<!-- PROFILE FOR JACOCO -->
		<profile>
			<id>jacoco</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<jacoco.version.1>0.6.3-SNAPSHOT</jacoco.version.1>
				<jacoco.version>0.6.2.201302030002</jacoco.version>
				<jacoco.raw.dir>/homes/hadoopqa/jacoco/results/latest</jacoco.raw.dir>
				<!--jacoco.raw.file>${jacoco.raw.dir}/resourcemanager.jacoco.exec</jacoco.raw.file -->
				<jacoco.raw.file>${jacoco.raw.dir}</jacoco.raw.file>
				<jacoco.report.dir>${project.basedir}/target/site/jacoco/hadooptest</jacoco.report.dir>
			</properties>

			<!-- This allows us to depend directly on SNAPSHOT -->
			<repositories>
				<repository>
					<id>jacoco-snapshots</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
				</repository>
			</repositories>

			<dependencies>
				<!-- jacoco dependencies -->
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
				</dependency>
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>org.jacoco.agent</artifactId>
					<version>${jacoco.version}</version>
				</dependency>
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>org.jacoco.ant</artifactId>
					<version>${jacoco.version}</version>
				</dependency>
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>org.jacoco.report</artifactId>
					<version>${jacoco.version}</version>
				</dependency>
				<dependency>
					<groupId>org.jacoco</groupId>
					<artifactId>org.jacoco.core</artifactId>
					<version>${jacoco.version}</version>
				</dependency>
				<dependency>
					<groupId>org.ow2.asm</groupId>
					<artifactId>asm-all</artifactId>
					<version>4.1</version>
				</dependency>
			</dependencies>

			<build>			
				<plugins>

					<!-- jacoco coverage report for Hadoop core -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<dependencies>
							<dependency>
								<groupId>org.jacoco</groupId>
								<artifactId>org.jacoco.ant</artifactId>
								<version>${jacoco.version}</version>
							</dependency>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>20020829</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>jacoco-report</id>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef name="jacoco-report" classname="org.jacoco.ant.ReportTask"
											classpathref="maven.plugin.classpath" />
										<taskdef classpathref="maven.runtime.classpath"
											resource="net/sf/antcontrib/antcontrib.properties" />
										<available file="${jacoco.raw.file}" property="jacoco.exec.file.exists" />
										<if>
											<equals arg1="${jacoco.exec.file.exists}" arg2="true" />
											<then>
												<echo message="Found ${jacoco.raw.file}" />
												<echo message="Executing jacoco report for Hadoop Core" />
												<trycatch>
													<try>
														<property name="hadoop.install" value="${HADOOP_INSTALL}" />
														<ant antfile="${project.basedir}/build.xml" target="clean" />
														<ant antfile="${project.basedir}/build.xml" target="merge" />
														<ant antfile="${project.basedir}/build.xml" target="report" />
													</try>
													<catch>
														<echo>skipping</echo>
													</catch>
												</trycatch>
											</then>
											<else>
												<echo message="No jacoco.exec file found." />
											</else>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- jacoco coverage report for the java test framework -->
					<!-- This requires ant merge to be run first in the previous section -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.version}</version>
						<configuration>
							<!-- [DEBUG] (f) dataFile = /tmp/hadooptest-hadoopqa-theoden/target/jacoco.exec -->
							<!-- this plugin is searching for the jacoco.exec file in the ../target 
								directory -->
							<destfile>${basedir}/data/exec/jacoco.exec</destfile>
							<datafile>${basedir}/data/exec/jacoco.exec</datafile>
							<outputDirectory>${jacoco.report.dir}</outputDirectory>
						</configuration>
						<executions>
							<execution>
								<id>jacoco-initialize</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>jacoco-site</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<!-- PROFILE FOR CLOVER -->
		<profile>
			<id>clover</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>clover</name>
				</property>
			</activation>
			<properties>
				<cloverLicenseLocation>/home/y/conf/clover/clover.license</cloverLicenseLocation>
				<cloverDatabase>${project.build.directory}/clover/hadoop-coverage.db</cloverDatabase>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.atlassian.maven.plugins</groupId>
						<artifactId>maven-clover2-plugin</artifactId>
						<version>3.0.5</version>
						<configuration>
							<includesAllSourceRoots>true</includesAllSourceRoots>
							<includesTestSourceRoots>true</includesTestSourceRoots>
							<licenseLocation>${cloverLicenseLocation}</licenseLocation>
							<cloverDatabase>${cloverDatabase}</cloverDatabase>
							<targetPercentage>50%</targetPercentage>
							<outputDirectory>${project.build.directory}/clover</outputDirectory>
							<generateHtml>true</generateHtml>
							<generateXml>true</generateXml>
						</configuration>
						<executions>
							<execution>
								<id>clover-setup</id>
								<phase>process-sources</phase>
								<goals>
									<goal>setup</goal>
								</goals>
							</execution>
							<execution>
								<id>clover</id>
								<phase>test</phase>
								<goals>
									<goal>clover</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- BASE PROFILE FOR HADDOP -->
		<!-- When Hadoop is used, this profile must be called before profile-ci
		     or any other profile.  If another profile is used first, the
		     dependency jars from that profile might have Hadoop configuration
		     or classes that will upset the classpath assembled by maven,
		     and can lead to unexpected configuration or classes ending up in
		     the classpath before the necessary Hadoop support.  By putting
		     profile-hadoop first in the maven profile order, it ensures
		     that Hadoop API calls and configuration will be using the 
		     deployed Hadoop jars. -->
		<profile>
			<id>profile-hadoop</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
				
				<dependency>
					<groupId>system</groupId>
					<artifactId>system-protobuf</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/lib/protobuf-java-2.5.0.jar</systemPath>
				</dependency>
				<dependency>
					<groupId>system</groupId>
					<artifactId>system-snappy-java</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/common/lib/snappy-java-1.0.4.1.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system32</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/common/hadoop-common-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system_commons_cli</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/common/lib/commons-cli-1.2.jar</systemPath>
				</dependency>
				
				<dependency>
					<groupId>system</groupId>
					<artifactId>system34</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/common/lib/hadoop-auth-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system35</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/common/lib/hadoop-annotations-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system36</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/common/hadoop-gpl-compression.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system37</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/hdfs/hadoop-hdfs-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system40</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-client-${HADOOP_VERSION}.jar</systemPath>
				</dependency>
				<dependency>
					<groupId>system</groupId>
					<artifactId>system41</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-server-nodemanager-${HADOOP_VERSION}.jar</systemPath>
				</dependency>
				<dependency>
					<groupId>system</groupId>
					<artifactId>system42</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-server-resourcemanager-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system1</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/httpfs/tomcat/webapps/webhdfs/WEB-INF/lib/hadoop-common-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system2</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/httpfs/tomcat/webapps/webhdfs/WEB-INF/lib/hadoop-hdfs-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system3</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/httpfs/tomcat/webapps/webhdfs/WEB-INF/lib/hadoop-auth-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system4</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/mapreduce/hadoop-mapreduce-client-shuffle-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system5</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/mapreduce/hadoop-mapreduce-client-hs-plugins-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system6</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/mapreduce/lib/hadoop-annotations-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system7</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/mapreduce/hadoop-mapreduce-client-common-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system8</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/mapreduce/hadoop-mapreduce-examples-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system9</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/mapreduce/hadoop-mapreduce-client-hs-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system10</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/mapreduce/hadoop-mapreduce-client-jobclient-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system11</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/mapreduce/hadoop-mapreduce-client-app-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system12</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/mapreduce/hadoop-mapreduce-client-core-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system14</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-api-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system15</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-server-nodemanager-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system16</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-applications-distributedshell-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system18</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-server-web-proxy-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system19</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-common-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system20</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-server-common-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system21</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/yarn/hadoop-yarn-server-resourcemanager-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system22</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-streaming-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system23</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-archives-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system24</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-distcp-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system25</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-extras-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system26</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-datajoin-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system27</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-mapreduce-test.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system28</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-rumen-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system29</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-gridmix.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system30</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-streaming.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system31</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/tools/lib/hadoop-gridmix-${HADOOP_VERSION}.jar</systemPath>
				</dependency>

				<dependency>
					<groupId>system</groupId>
					<artifactId>system33</artifactId>
					<version>0.9.2</version>
					<scope>system</scope>
					<systemPath>${HADOOP_SHARE}/common/lib/commons-codec-1.4.jar</systemPath>
				</dependency>

			</dependencies>
		</profile>

	<profile>
		<!-- When Hadoop is used, the profile-hadoop profile must be called 
			 before profile-ci or any other profile.  If another profile is used 
			 first, the dependency jars from that profile might have Hadoop 
			 configuration or classes that will upset the classpath assembled 
			 by maven, and can lead to unexpected configuration or classes 
			 ending up in the classpath before the necessary Hadoop support.  
			 By putting profile-hadoop first in the maven profile order, it 
			 ensures that Hadoop API calls and configuration will be using the 
		     deployed Hadoop jars.  If Hadoop is not being used, profile-ci
		     should be used in all other cases. -->
		<id>profile-ci</id>
		<activation>
			<activeByDefault>false</activeByDefault>
		</activation>
		<dependencies>
		
			<!-- STORM -->
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_contrib_http_spout</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_contrib_fetch/lib/jars/http_spout.jar</systemPath>
			</dependency>

			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_contrib_rainbow_spout_example</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_contrib_fetch/lib/jars/rainbow_spout_example-jar-with-dependencies.jar</systemPath>
			</dependency>

			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_core</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_fetch/lib64/storm/current/storm-core-0.9.0-wip21.jar</systemPath>
			</dependency>

			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_netty</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_fetch/lib64/storm/current/storm-netty-0.9.0-wip21.jar</systemPath>
			</dependency>

			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_yahoo</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_fetch/lib64/storm/current/storm_yahoo-0.9.0-wip21.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_thrift7</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_fetch/lib64/storm/current/lib/libthrift7-0.7.0-2.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_zookeeper</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_fetch/lib64/storm/current/lib/zookeeper-3.4.5.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_curator_client</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_fetch/lib64/storm/current/lib/curator-client-1.3.3.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_curator_framework</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_fetch/lib64/storm/current/lib/curator-framework-1.3.3.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_jgrapht</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_fetch/lib64/storm/current/lib/jgrapht-0.8.3.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>ystorm_clojure</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/ystorm_fetch/lib64/storm/current/lib/clojure-1.4.0.jar</systemPath>
			</dependency>
			
			<!-- COMMONS-CODEC -->
		
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.9</version>
			</dependency>

			<!-- YJAVA_BYAUTH -->
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_byauth</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_byauth_fetch/lib/jars/yjava_byauth.jar</systemPath>
			</dependency>

			<!-- JETTY -->
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_client</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-client-9.0.6.v20130930.jar</systemPath>
			</dependency>

			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_jaas</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-jaas-9.0.6.v20130930.jar</systemPath>
			</dependency>

			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_util</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-util-9.0.6.v20130930.jar</systemPath>
			</dependency>

			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_annotations</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-annotations-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_continuation</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-continuation-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_deploy</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-deploy-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_http</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-http-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_io</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-io-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_jmx</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-jmx-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_jndi</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-jndi-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_plus</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-plus-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_proxy</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-proxy-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_rewrite</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-rewrite-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_security</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-security-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_server</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-server-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_servlet</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-servlet-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_servlets</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-servlets-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_webapp</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-webapp-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yjava_jetty_xml</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yjava_jetty_fetch/libexec/yjava_jetty/lib/jetty-xml-9.0.6.v20130930.jar</systemPath>
			</dependency>
			
			<!-- SPARK -->
			
			<dependency>
				<groupId>system</groupId>
				<artifactId>yspark_yarn</artifactId>
				<version>0.9.2</version>
				<scope>system</scope>
				<systemPath>${HTF_WORKSPACE}/yinst_fetch_dependencies/yspark_yarn_fetch/share/spark-0.9.0.1/jars/spark-assembly_2.10-0.9.0.1-hadoop2.jar</systemPath>
			</dependency>

		</dependencies>

	</profile>
	</profiles>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<outputDirectory>${basedir}/target</outputDirectory>
					<finalName>RandomWriter</finalName>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<!-- Skip the default running of this plug-in (or everything will run 
						twice... see below) -->
					<skip>true</skip>
					<!-- Skip the default running of this plug-in (or everything will run 
						twice... see below) -->
					<!-- Continue build after encountering error, override with -Dmaven.test.failure.ignore=true -->
					<testFailureIgnore>true</testFailureIgnore>
					<exclusions>
						<exclusion>
							<groupId>org.apache.hadoop</groupId>
							<artifactId>excluded-artifact</artifactId>
						</exclusion>
					</exclusions>
					<!-- Set JVM heap max size -->
					<!-- The compression job submission explicity needs to use the 64-bit 
						compression libraries (i386-32) for the jobs to run successfully as the nodes 
						in the cluster run in 32-bit mode JVMs. The verification of the jobs needs 
						to be done with the 64-bit compression libraries (amd64-64) as the gateway 
						node JVM (and thus all framework access of the hadoop API) is done through 
						a 64-bit JVM. Setting the java.library.path to 64-bit native libraries here 
						allows Hadoop API access via 64-bit java from the gateways. -->
					<argLine>-Djava.library.path=/home/gs/gridre/yroot.${CLUSTER}/share/hadoop/lib/native/Linux-amd64-64/:/home/y/lib64
						-Xmx3g</argLine>
					<additionalClasspathElements>
						<additionalClasspathElement>${basedir}</additionalClasspathElement>
						<additionalClasspathElement>${basedir}/target/RandomWriter-tests.jar</additionalClasspathElement>
						<additionalClasspathElement>/home/gs/gridre/yroot.${CLUSTER}/conf/hadoop/</additionalClasspathElement>
						<additionalClasspathElement>/home/y/lib/storm/current/conf</additionalClasspathElement>
					</additionalClasspathElements>
					<trimStackTrace>false</trimStackTrace>
					<excludes>
						<exclude>**/TestEndToEndCompression.java</exclude>
					</excludes>
					<properties>
						<property>
							<name>listener</name>
							<value>hadooptest.monitoring.listeners.MonitoringListener</value>
						</property>
					</properties>
				</configuration>

				<executions>

					<execution>
						<id>setup-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<groups>hadooptest.SetupTests</groups>
						</configuration>
					</execution>

					<execution>
						<id>serial-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<groups>hadooptest.SerialTests</groups>
						</configuration>
					</execution>

					<execution>
						<id>parallel-methods-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<groups>hadooptest.ParallelMethodTests</groups>
							<parallel>methods</parallel>
							<threadCount>${thread.count}</threadCount>
						</configuration>
					</execution>

					<execution>
						<id>parallel-class-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<groups>hadooptest.ParallelClassTests</groups>
							<parallel>class</parallel>
							<threadCount>${thread.count}</threadCount>
						</configuration>
					</execution>

					<execution>
						<id>parallel-class-and-method-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<excludedGroups>hadooptest.SetupTests,hadooptest.SerialTests,hadooptest.ParallelClassTests,hadooptest.ParallelMethodTests,hadooptest.TearDownTests</excludedGroups>
							<parallel>both</parallel>
							<threadCount>${thread.count}</threadCount>
						</configuration>
					</execution>

					<execution>
						<id>tear-down-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
							<groups>hadooptest.TearDownTests</groups>
						</configuration>
					</execution>

				</executions>
			</plugin>
		</plugins>

	</build>

	<dependencies>
	


	</dependencies>

</project>
