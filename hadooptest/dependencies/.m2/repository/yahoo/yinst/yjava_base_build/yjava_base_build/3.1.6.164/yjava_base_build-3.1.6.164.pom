<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>yahoo.yinst.yjava_base_build</groupId>
    <artifactId>yjava_base_build</artifactId>
    <packaging>pom</packaging>
    <version>3.1.6.164</version>
    <name>yjava_base_build</name>
    <url>http://twiki.corp.yahoo.com/view/JavaPlatform</url>
    <description>YJava Base Build Pom</description>
    <prerequisites>
	<maven>2.1</maven>
    </prerequisites>


    <parent>
	<groupId>yahoo.yinst.java_base_build</groupId>
	<artifactId>java_base_build</artifactId>
	<version>3.1.6.164</version>
    </parent>

    <properties>
	<min_jdk_version>1.6</min_jdk_version>
	<max_jdk_version>1.9</max_jdk_version>
	<scm.path>yahoo/yjava/devtools/yjava_base_build/trunk</scm.path>
	<mailingList.name>java-platform-devel</mailingList.name>
	<bug.product>java-platform</bug.product>
	<bug.component>yjava_base_build</bug.component>
	<swig.args>SWIG_CMDLINE_EXTRAS=</swig.args>
	<swig.clean.args>${swig.args}</swig.clean.args>
	<swig.compile.args>${swig.args}</swig.compile.args>
	<swig.coverity.args>${swig.args}</swig.coverity.args>
	<swig.gcov.args>${swig.args}</swig.gcov.args>
    </properties>
 	<build>
		<plugins>
			<plugin>
				<groupId>yahoo.yinst.maven_plugins</groupId>
				<artifactId>yjava_maven_plugins_yinst</artifactId>
				<version>0.4.15</version>
				<configuration>
					<yicfPrepend>print &lt;&lt; 'EOF';</yicfPrepend>
					<yicfAppend>EOF</yicfAppend>
					<sourceDirectory>target/yicf</sourceDirectory>
				</configuration>
				<executions>
					<execution>
						<id>generate-yicf</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>yicf</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
   <profiles>
	<profile>
	    <id>native</id>
	    <activation>
		<file>
		    <exists>Makefile</exists>
		</file>
		<activeByDefault>false</activeByDefault>
	    </activation>
	    <build>
		<plugins>
		    <plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>exec-maven-plugin</artifactId>
			<executions>
			    <execution>
				<id>gmake-clean</id>
				<phase>clean</phase>
				<goals>
				    <goal>exec</goal>
				</goals>
				<configuration>
				    <executable>gmake</executable>

				    <arguments>
					<argument>${swig.clean.args}</argument>
					<argument>cleanplatforms</argument>
				    </arguments>

				    <environmentVariables>
					<POM_VERSION>${version}</POM_VERSION>
				    </environmentVariables>
				</configuration>
			    </execution>
			    <execution>
				<id>gmake-generate-sources</id>
				<phase>generate-sources</phase>
				<goals>
				    <goal>exec</goal>
				</goals>
				<configuration>
				    <executable>gmake</executable>
				    <arguments>
					<argument>${swig.compile.args}</argument>
					<argument>all/coverage-modes/os-platforms</argument>
				    </arguments>
				    <sourceRoot>target/generated-sources/swig</sourceRoot>
				    <environmentVariables>
					<POM_VERSION>${version}</POM_VERSION>
				    </environmentVariables>
				</configuration>
			    </execution>
			</executions>
		    </plugin>
		</plugins>
	    </build>
	</profile>
	<profile>
	    <id>native-component</id>
	    <activation>
		<property>
		    <name>component</name>
		    <value>native</value>
		</property>
		<activeByDefault>false</activeByDefault>
	    </activation>
	    <properties>
		<native>true</native>
	    </properties>
	    <build>
		<plugins>
		    <plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>exec-maven-plugin</artifactId>
			<executions>
			    <execution>
				<id>pre-analyze-native-coverity</id>
				<phase>prepare-package</phase>
				<goals>
				    <goal>exec</goal>
				</goals>
				<configuration>
				    <executable>rm</executable>
				    <arguments>
					<argument>-f</argument>
					<argument>target/coverity/java/output/stats_report.errors.xml</argument>
				    </arguments>
				</configuration>
			    </execution>
			    <execution>
				<id>analyze-native-coverity</id>
				<phase>prepare-package</phase>
				<goals>
				    <goal>exec</goal>
				</goals>
				<configuration>
				    <executable>gmake</executable>
				    <arguments>
					<argument>${swig.coverity.args}</argument>
					<argument>coverityplatforms</argument>
				    </arguments>
				    <environmentVariables>
					<POM_VERSION>${version}</POM_VERSION>
				    </environmentVariables>
				</configuration>
			    </execution>
			    <execution>
				<id>lcov</id>
				<phase>prepare-package</phase>
				<goals>
				    <goal>exec</goal>
				</goals>
				<configuration>
				    <executable>gmake</executable>
				    <arguments>
					<argument>${swig.gcov.args}</argument>
					<argument>gen-lcov-report</argument>
					<argument>MODE=gcov</argument>
					<argument>PLATFORM=${platform}</argument>
				    </arguments>
				    <environmentVariables>
					<POM_VERSION>${version}</POM_VERSION>
				    </environmentVariables>
				</configuration>
			    </execution>
			</executions>
		    </plugin>
		</plugins>
	    </build>
	</profile>
	<profile>
	    <id>stress-test</id>
	    <activation>
		<property>
		    <name>component</name>
		</property>
	    </activation>
	    <build>
		<plugins>
		    <plugin>
			<artifactId>maven-surefire-plugin</artifactId>
			<executions>
			    <execution>
				<id>stress-test</id>
				<!-- so it doesn't get executed in clover forked life cycle, but 
				before wasting time in creating a package -->
				<phase>prepare-package</phase>
				<goals>
				    <goal>test</goal>
				</goals>
				<configuration>
				    <reportsDirectory>${project.build.directory}/surefire-stresstest-reports</reportsDirectory>
				    <argLine>-Djava.library.path=${nativeDir}:${libDir} ${surefireArgs} -Xmx1024m -XX:MaxPermSize=128M</argLine>
				    <properties>
					<property>
					    <name>usedefaultlisteners</name>
					    <key>false</key>
					</property>
					<property>
					    <name>listener</name>
					    <value>${testngReporter}</value>
					</property>
					<property>
					    <name>reporter</name>
					    <value>${testngReporter}</value>
					</property>
					<property>
					    <name>parallel</name>
					    <value>false</value>
					</property>
				    </properties>
				    <test>**/*IT.java</test>
				    <environmentVariables>
					<YSECURE_ERRORLOG>/dev/null</YSECURE_ERRORLOG>
				    </environmentVariables>
				</configuration>
			    </execution>
			</executions>
		    </plugin>
		</plugins>
	    </build>
	</profile>
    </profiles>
</project>
