#!/bin/bash

#################################################################################
# This script is inteded to provide test related information for a Hadoop QE
# Cluster.
#################################################################################

VERBOSE=0
GET_RYOOT=0
FORCE=0

function usage
{
    cat <<EOF
usage: $0  --cluster             |-c <cluster name>
          [--role                |-r <rolesdb role> ]
          [--yroot               |-y ]
          [--force               |-f ]
          [--verbose             |-v ]
          [--help                |-h ]

--cluster            Name of the cluster
--role               Name of the rolesdb role
--yroot              Display yroot
--force              Force fetching instead of using cache file
--verbose            Use verbose
--help               Display usage

Example:

$ clustertestconfig -c mallard -r hdfsproxy
$ clustertestconfig -c mallard -r hdfsproxy --yroot 
$ clustertestconfig -c mallard -r gateway --force
$ clustertestconfig -c mallard -r gateway
$ clustertestconfig -c mallard -r gateway --yroot

EOF
}

while [ "$1" != "" ]; do
    case $1 in
        -c | --cluster )          shift
                                  cluster=$1
                                  ;;
        -r | --role )             shift
                                  ROLE=$1
                                  ;;
        -y | --yroot )            GET_YROOT=1
                                  ;;
        -f | --force )            FORCE=1
                                  ;;
        -v | --verbose )          VERBOSE=1
                                  ;;
        -h | --help )             usage
                                  exit
                                  ;;
        * )                       usage
                                  exit 1
    esac
    shift
done


ROLES_FILE=/tmp/grid_re.cluster.$cluster

if ([[ ! -f $ROLES_FILE ]] || [[ $FORCE == 1 ]])
then 
    echo "--> Get roles "
    #igor list -roles grid_re.clusters.$cluster.* > $ROLES_FILE
    /home/y/bin/rocl -n grid_re -r clusters.$cluster.* > $ROLES_FILE
else
    echo "--> Get roles using existing file '$ROLES_FILE'"
fi
if [[ $VERBOSE == 1 ]]; then
    cat $ROLES_FILE;
fi

MEMBERS_FILE=/tmp/grid_re.cluster.$cluster.members
if ([[ ! -f $MEMBERS_FILE ]] || [[ $FORCE == 1 ]])
then 
    # for host in `igor list -roles grid_re.clusters.$cluster.*`;do 
    echo "--> Get host member "
    if [[ -f $MEMBERS_FILE ]]; then
        rm $MEMBERS_FILE
    fi
    touch $MEMBERS_FILE
    for role in `cat $ROLES_FILE`;do 
        echo -n "role $role " 2>&1 |tee -a $MEMBERS_FILE; 
        /home/y/bin/rocl -r $role -m  2>&1 |tee -a $MEMBERS_FILE;
    done;
else
    echo "--> Get role members using existing file '$MEMBERS_FILE'"
    cat $MEMBERS_FILE;
fi

if [[ -n $ROLE ]]; then
    echo "--> Get host for role '$ROLE'"
    grep -w $ROLE $MEMBERS_FILE
    HOST=`grep -w $ROLE $MEMBERS_FILE|cut -d' ' -f3`
fi

if [[ -n $GET_YROOT ]]; then
    # [--date] [--sort_time|-st] [--sort_reverse|-sr]
    ssh $HOST yroot -list --sort_time --date
fi


