#!/bin/bash

# for cluster in `IGOR_NS="grid_re.clusters";igor list -roles $IGOR_NS.*|grep $IGOR_NS.[a-zA-Z0-9]*$|cut -d "." -f3`;do echo -e "**********\n$cluster\n**********";hosts=`yinst range -ir "(@grid_re.clusters.$cluster)"|tr -s '\n' ','|sed -e  's/,$//'`;perl -e 'alarm shift @ARGV; exec @ARGV' 5 pdsh -w $hosts echo "Connected successfully";done

CLUSTERS_PARAM=$*
CLUSTERS=${CLUSTERS_PARAM:=`IGOR_NS="grid_re.clusters";igor list -roles $IGOR_NS.*|grep $IGOR_NS.[a-zA-Z0-9]*$|cut -d "." -f3`}

for cluster in $CLUSTERS; do
    echo "--------------------"
    echo cluster $cluster
    echo "--------------------"
    hosts=`yinst range -ir "(@grid_re.clusters.$cluster)"|tr -s '\n' ','|sed -e  's/,$//'`;
    # perl -e 'alarm shift @ARGV; exec @ARGV' 5 pdsh -w $hosts "echo -n 'Connected successfully to ';hostname";
    set -x
    PDSH_SSH_ARGS_APPEND="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" perl -e 'alarm shift @ARGV; exec @ARGV' 5 pdsh -t 30 -u 30 $PDSH_OPT -w $hosts "df -h";
    set +x

    namenode=`yinst range -ir "(@grid_re.clusters.$cluster.namenode)"|tr -s '\n' ','|sed -e  's/,$//'`;
    rm=`yinst range -ir "(@grid_re.clusters.$cluster.jobtracker)"|tr -s '\n' ','|sed -e  's/,$//'`;
    version=`curl -s http://$namenode:50070/jmx?get=Hadoop:service=NameNode,name=NameNodeInfo::SoftwareVersion`
    version=`echo $version|cut -d':' -f6|awk '{print $1}'`
    echo "Cluster $cluster namenode Hadoop Version: " $version
set -x
    last_job=`curl -s http://$rm:19888/jobhistory|grep job_|tail -1`
set +x
    if [[ -z $last_job ]]; then
set -x
        log_ts=`ssh $rm -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ls -lrt /home/gs/var/log/mapredqa/*|tail -1|awk '{print $6, $7, $8}'`
set +x
        echo "History Server down, show last time stamp on RM log: $log_ts"
    else
        echo "Last recorded job in History Server:" `echo $last_job| cut -d, -f3,5,6,8`
    fi

done

# console reboot
# auto file site-ops ticket


